## ** Lab Setup for HTML Injection**
We'll create a **vulnerable web application** using **PHP and Apache** to test HTML Injection.

### ** Steps to Set Up the Lab**
### **1️) Install Required Tools**
You'll need:  
- A web server (**XAMPP** or **Apache with PHP**)  
- A browser (preferably **Burp Suite** for testing)  
- A text editor (VS Code, Sublime, or Nano)  

#### **For XAMPP (Recommended)**
Download and install **XAMPP** from [Apache Friends](https://www.apachefriends.org/index.html).  
Start **Apache** from the XAMPP Control Panel.

---

### **2️) Create a Vulnerable Web Application**
Navigate to your web root:  
- On **XAMPP (Windows)**: `C:\xampp\htdocs\`  
- On **Linux (Apache default)**: `/var/www/html/`

#### **Create a file named `vuln_html_injection.php`**
```php
<?php
if(isset($_GET['name'])){
    $name = $_GET['name'];  // No sanitization -> Vulnerable to HTML Injection
    echo "<h1>Welcome, $name</h1>";
} else {
    echo "<h1>Enter your name in the URL.</h1>";
}
?>
```

---

### **3) Running the Lab**
1. **Start Apache** (`sudo systemctl start apache2` on Linux or XAMPP Control Panel on Windows).  
2. **Access the page in your browser:**  
   ```
   http://localhost/vuln_html_injection.php?name=Harsh
   ```
3. **Test for Injection**  
   Try injecting HTML:
   ```
   http://localhost/vuln_html_injection.php?name=<h1 style="color:red">Hacked!</h1>
   ```
   **Expected Output (Vulnerable Page):**  
   ```
   Hacked! (in large red text)
   ```

   Now try injecting JavaScript (which could lead to XSS):
   ```
   http://localhost/vuln_html_injection.php?name=<script>alert('Hacked!');</script>
   ```

---

